# https://projecteuler.net/problem=2
# Even Fibonacci numbers

'''
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
'''


MAX_NUM = 4_000_000

def main():

    n_minus_2 = 0
    n_minus_1 = 1
    curr_num = n_minus_1 + n_minus_2

    sum = 0

    while (curr_num <= MAX_NUM):
        # print(curr_num)
        is_even = (curr_num % 2) == 0
        if is_even:
            sum += curr_num

        n_minus_2 = n_minus_1
        n_minus_1 = curr_num
        curr_num = n_minus_1 + n_minus_2

    print(f'Sum: {sum}')

    return()



if __name__ == "__main__":
    main()